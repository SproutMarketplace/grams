// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-powered recommendations on which products to stock, based on past sales data,
 * customer preferences, and compliance restrictions. It helps dispensary managers maximize sales and minimize losses.
 *
 * - getInventoryRecommendations - A function that generates inventory recommendations.
 * - InventoryRecommendationsInput - The input type for the getInventoryRecommendations function.
 * - InventoryRecommendationsOutput - The return type for the getInventoryRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Define the input schema
const InventoryRecommendationsInputSchema = z.object({
  salesData: z.string().describe('Historical sales data of the dispensary.'),
  customerPreferences: z.string().describe('Data on customer preferences, including preferred product types, brands, and price points.'),
  complianceRestrictions: z.string().describe('Any legal or compliance restrictions on product sales.'),
  currentInventory: z.string().describe('The current inventory levels for each product'),
});
export type InventoryRecommendationsInput = z.infer<typeof InventoryRecommendationsInputSchema>;

// Define the output schema
const InventoryRecommendationsOutputSchema = z.object({
  recommendedProducts: z.array(z.string()).describe('A list of recommended products to stock.'),
  reasoning: z.string().describe('Explanation of why each product is recommended, considering sales data, customer preferences, and compliance restrictions.'),
});
export type InventoryRecommendationsOutput = z.infer<typeof InventoryRecommendationsOutputSchema>;

// Define the wrapper function
export async function getInventoryRecommendations(input: InventoryRecommendationsInput): Promise<InventoryRecommendationsOutput> {
  return inventoryRecommendationsFlow(input);
}

// Define the prompt
const inventoryRecommendationsPrompt = ai.definePrompt({
  name: 'inventoryRecommendationsPrompt',
  input: {schema: InventoryRecommendationsInputSchema},
  output: {schema: InventoryRecommendationsOutputSchema},
  prompt: `You are an AI assistant designed to provide inventory recommendations for a cannabis dispensary. Based on the provided sales data, customer preferences, compliance restrictions, and current inventory, recommend a list of products to stock. Provide a clear explanation for each recommendation.

Sales Data: {{{salesData}}}
Customer Preferences: {{{customerPreferences}}}
Compliance Restrictions: {{{complianceRestrictions}}}
Current Inventory: {{{currentInventory}}}

Consider all factors to maximize sales and minimize losses.

Output in JSON format:
`,
});

// Define the flow
const inventoryRecommendationsFlow = ai.defineFlow(
  {
    name: 'inventoryRecommendationsFlow',
    inputSchema: InventoryRecommendationsInputSchema,
    outputSchema: InventoryRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await inventoryRecommendationsPrompt(input);
    return output!;
  }
);
